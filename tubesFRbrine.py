from math import pow, exp, log10, log

# Water Solubility (Rsw)
def Rsw(P,T):
   a0 = 2.12
   a1 = 3.45*(10**(-3))
   a2 = 3.59*(10**(-5))
   a = a0 + (a1*T) - (a2*T*T)

   b0 = 0.0107
   b1 = 5.26*(10**(-5))
   b2 = 1.48*(10**(-7))
   b = b0 - (b1*T) + (b2*T*T)

   c0 = (-8.75)*(0.0000001)
   c1 = 3.9*(0.000000001)
   c2 = 1.02*(0.00000000001)
   c = c0 + (c1*T) - (c2*T*T)
   x = a + (b*P) + (c*P*P)
   return x

# Formation Volume Factor (Bw)
def BwF(P,T): #Gas-Free Brine (P>Pb)
   a1 = 0.9947 + 5.8*(10**(-7))*T + 1.02*(10**(-6))*(T**(2))
   a2 = (-4.228)*(10**(-6)) + 1.8376*(10**(-8))*T + (-6.77)*(10**(-11))*(T**(2))
   a3 = 1.3*(10**(-10)) + (-1.3855)*(10**(-12))*T + 4.285*(10**(-15))*(T**(2))
   return a1 + (a2*P) + (a3*(P**(2)))
def BwS(P,T): #Gas-Saturated Brine (P<Pb)
   a1 = 0.9911 + 6.35*(10**(-5))*T + 8.5*(10**(-7))*(T**(2))
   a2 = (-1.093*(10**(-6))) + (-3.497*(10**(-9))*T) + 4.57*(10**(-12))*(T**(2))
   a3 = (-5)*(10**(-11)) + 6.429*(10**(-13))*T + (-1.43*(10**(-15))*(T**2))
   return a1 + (a2*P) + (a3*(P**(2)))

# Viscosity
def WVisStd(P,T,S): #Standar Cor
   # S = Salinity in %
   # Sp = Salinity in ppm
   Sp = S*(10**(4))
   a = 4.518*0.01 + (9.313*0.0000001*Sp) - 3.93*(10**(-12))*(Sp**(2))
   b = 70.634 + 9.576*(0.0000000001)*(Sp**(2))
   visco = a + b/T
   WVis = visco*(1 + 3.5*0.01*(P**(2))*(T - 40))
   return WVis*(10**(-8))

def WVisBB(T): #Beggs-Brill Cor
   WVis = exp(1.003 - 1.479*(10**(-2))*T + 1.982*(10**(-5))*(T**(2)))
   return WVis

#def WVisM(): #Meehan

# Isothermal Compressibility
def CwF(P,T,S):
   A = 3.8546 - 0.000134*P
   B = (-0.01052) + 4.77*(10**(-7))*P
   C = 3.9267*(10**(-5)) - 8.8*(10**(-10))*P
   CwF0 = (10**(-6))*(A + B*T + C*(T**(2)))
   Cz = 1 + ((-0.052 + 2.7*(10**(-4))*T - 1.14*(10**(-6))*(T**(2)) + 1.121*(10**(-9))*(T**(3))))*(S**(0.7))
        
   return CwF0*Cz

def CwS(P,T,S):
   CwS0 = CwF(P,T,S)*(1 + 8.9*(10**(-3))*Rsw(P,T))
   Cz = 1 + ((-0.052 + 2.7*(10**(-4))*T - 1.14*(10**(-6))*(T**(2)) + 1.121*(10**(-9))*(T**(3))))*(S**(0.7))
        
   return CwS0*Cz

# Density
def WDensity(S):
    return 62.368 + 0.438603*(S + 1.60074)*(10**(-3))*(S**(2))
    